<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://pounde.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://pounde.github.io/blog/" rel="alternate" type="text/html" /><updated>2021-02-13T12:33:43-06:00</updated><id>https://pounde.github.io/blog/feed.xml</id><title type="html">My Blog</title><subtitle>My random musings.</subtitle><entry><title type="html">Calculate intersect of rasters using RasterIO in Python</title><link href="https://pounde.github.io/blog/gis/python/rasterio/2021/02/12/Using-rasterio-to-calculate-raster-intersect.html" rel="alternate" type="text/html" title="Calculate intersect of rasters using RasterIO in Python" /><published>2021-02-12T00:00:00-06:00</published><updated>2021-02-12T00:00:00-06:00</updated><id>https://pounde.github.io/blog/gis/python/rasterio/2021/02/12/Using-rasterio-to-calculate-raster-intersect</id><author><name></name></author><category term="gis" /><category term="python" /><category term="rasterio" /><summary type="html">The problem While doing some work on a machine learning application, I needed to create image chips from two raster images for inference. My goal was to find the intersect to minimize exporting chips that had no data in the corresponding chip. I started by manually calculating the intersect from the bounds and determining the pixel that corresponded to the location. Although this method worked on my test cases, I was skeptical it would work on all inputs. I eventually rooted around long enough and found the following solution to be much more elegant.</summary></entry></feed>